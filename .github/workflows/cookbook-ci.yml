name: CookBook CI (Import → Index → Build → Pages)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
  # Optional nightly rebuild
  schedule:
    - cron: "0 3 * * *"

permissions:
  contents: write     # we push generated files
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

# Guard against endless loops when the bot commits generated files
# (The push still triggers, but jobs skip immediately.)
jobs:

  import_json:
    if: github.actor != 'github-actions[bot]'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Convert JSON → Markdown
        run: python scripts/json_to_markdown.py

      - name: Commit generated Markdown (if any)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add recipes/**/*.md 2>/dev/null || true
            git commit -m "chore: generate markdown from JSON" || echo "No changes to commit"
            git remote set-url origin "https://x-access-token:${GITHUB_TOKEN}@github.com/${REPO}.git"

            # Rebase on latest main to avoid non-fast-forward rejections
            git fetch origin
            git checkout main
            git pull --rebase origin main || true

            # Push with simple retry to avoid races with parallel jobs
            for i in 1 2 3; do
              if git push origin main; then
                echo "Pushed successfully."
                exit 0
              fi
              echo "Push failed, refetching and rebasing… (attempt $i)"
              git fetch origin
              git pull --rebase origin main || true
              sleep 2
            done
            echo "Failed to push after 3 attempts." && exit 1
          else
            echo "No markdown changes to commit."
          fi

  build_indexes:
    if: github.actor != 'github-actions[bot]'
    runs-on: ubuntu-latest
    needs: import_json
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Build indexes, tags and category pages
        run: python scripts/build_indexes.py

      - name: Commit indexes (if any)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add recipes/_all.md recipes/tags.md recipes/tags/*.md 2>/dev/null || true
            find recipes -type f -name '_index.md' -print0 | xargs -0 -r git add
            git add -A recipes
            git commit -m "chore: auto-update indexes/tags" || echo "No changes to commit"
            git remote set-url origin "https://x-access-token:${GITHUB_TOKEN}@github.com/${REPO}.git"

            # Rebase on latest main to avoid non-fast-forward rejections
            git fetch origin
            git checkout main
            git pull --rebase origin main || true

            # Push with simple retry to avoid races with parallel jobs
            for i in 1 2 3; do
              if git push origin main; then
                echo "Pushed successfully."
                exit 0
              fi
              echo "Push failed, refetching and rebasing… (attempt $i)"
              git fetch origin
              git pull --rebase origin main || true
              sleep 2
            done
            echo "Failed to push after 3 attempts." && exit 1
          else
            echo "No index changes to commit."
          fi

  build_site:
    if: github.actor != 'github-actions[bot]'
    runs-on: ubuntu-latest
    needs: build_indexes
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install MkDocs + theme
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: MkDocs build
        run: mkdocs build --strict

      - name: Upload site artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    runs-on: ubuntu-latest
    needs: build_site
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4